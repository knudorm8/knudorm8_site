/**
 * loadArticle –æ—Ç—Ä–∏–º—É—î –Ω–∞ –≤—Ö—ñ–¥ –Ω–∞–∑–≤—É —Å—Ç–∞—Ç—Ç—ñ —ñ, –∑ –¥–æ–ø–æ–º–æ–≥–æ—é fetch, –ø–µ—Ä–µ–≤—ñ—Ä—è—î –Ω–∞—è–≤–Ω—ñ—Å—Ç—å —Å—Ç–∞—Ç—Ç—ñ, —è–∫—â–æ —Å—Ç–∞—Ç—Ç—è —ñ—Å–Ω—É—î,
 * –∑–∞–≤–∞–Ω—Ç–∞–∂—É—î —ó—ó —ñ —Å—Ç–≤–æ—Ä—é—î –¥–ª—è –Ω–µ—ó –∑–º—ñ—Å—Ç –≤–∏–∫–ª–∏–∫–æ–º populate_contents()
 * @param articleName
 */
function loadArticle(articleName) {
  const articleElement = document.getElementById("article");
  const articlePath = "articles/" + articleName + ".html";
  articleElement.innerHTML = ""; // Clear the current content (if any)
  // Load content from articleName using fetch and insert it into the article element
  fetch(articlePath)
    .then(response => {
      if (response.status === 404) {
        return "<h1>–°—Ç–æ—Ä—ñ–Ω–∫–∏ –Ω–µ —ñ—Å–Ω—É—î</h1>" + "–ù–∞–º –¥—É–∂–µ, –¥—É–∂–µ —à–∫–æ–¥–∞ üòî";
      }
      return response.text();
    })
    .then(data => {
      articleElement.innerHTML = data;
      populate_contents();
    })
    .catch(error => {
      console.error("Error loading content:", error);
    });
}

document.addEventListener("DOMContentLoaded", function () {

  // Function to get the article name from the URL hash fragment
  function getArticleNameFromHash() {
    return window.location.hash.slice(1); // Remove the leading '#'
  }

  // Load content based on the URL hash fragment
  function handleHashChange() {
    const articleName = getArticleNameFromHash();
    if (articleName.length === 0) loadArticle("guide");
    loadArticle(articleName);
  }

  // Initial content loading based on the hash fragment
  handleHashChange();

  // Handle hash changes (e.g., when the user clicks on links)
  window.addEventListener("hashchange", handleHashChange);
});
